# SPDX-FileCopyrightText: 2025 Andrew Grimberg
# SPDX-License-Identifier: Apache-2.0

openapi: 3.0.3
info:
  title: Captive Portal Guest Access API
  description: Internal API for voucher redemption, grant management, and admin operations
  version: 0.1.0-phase1
  contact:
    name: Andrew Grimberg
    email: tykeal@gmail.com
  license:
    name: Apache-2.0

servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /health:
    get:
      summary: Health check endpoint
      tags: [internal]
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  /api/v1/vouchers/redeem:
    post:
      summary: Redeem voucher code for network access
      tags: [guest]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [code, mac]
              properties:
                code:
                  type: string
                  pattern: '^[A-Z0-9]{4,24}$'
                  example: ABC123XYZ0
                mac:
                  type: string
                  pattern: '^([0-9A-F]{2}:){5}[0-9A-F]{2}$'
                  example: "AA:BB:CC:DD:EE:FF"
      responses:
        '200':
          description: Voucher redeemed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGrant'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'

  /api/v1/grants:
    get:
      summary: List access grants (admin only)
      tags: [admin]
      security:
        - sessionAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, active, expired, revoked]
        - name: mac
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of grants
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGrant'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/grants/{grant_id}:
    get:
      summary: Get grant details
      tags: [admin]
      security:
        - sessionAuth: []
      parameters:
        - name: grant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Grant details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGrant'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Revoke grant
      tags: [admin]
      security:
        - sessionAuth: []
      parameters:
        - name: grant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Grant revoked successfully
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/admin/login:
    post:
      summary: Admin login
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/AdminUser'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/admin/logout:
    post:
      summary: Admin logout
      tags: [auth]
      security:
        - sessionAuth: []
      responses:
        '204':
          description: Logout successful

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session

  schemas:
    AccessGrant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        voucher_code:
          type: string
          nullable: true
        booking_ref:
          type: string
          nullable: true
        mac:
          type: string
        session_token:
          type: string
          nullable: true
        start_utc:
          type: string
          format: date-time
        end_utc:
          type: string
          format: date-time
        controller_grant_id:
          type: string
          nullable: true
        status:
          type: string
          enum: [pending, active, expired, revoked]
        created_utc:
          type: string
          format: date-time
        updated_utc:
          type: string
          format: date-time

    AdminUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        role:
          type: string
          enum: [viewer, auditor, operator, admin]
        active:
          type: boolean
        created_utc:
          type: string
          format: date-time
        last_login_utc:
          type: string
          format: date-time
          nullable: true

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code (e.g., INVALID_INPUT, NOT_FOUND)
        message:
          type: string
        details:
          type: object
          nullable: true

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: INVALID_INPUT
            message: Voucher code must be 4-24 uppercase alphanumeric characters

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: NOT_FOUND
            message: Voucher code not found

    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: DUPLICATE_REDEMPTION
            message: Voucher already redeemed for this device

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: UNAUTHORIZED
            message: Invalid credentials

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: RBAC_FORBIDDEN
            message: Role 'viewer' cannot perform this action
