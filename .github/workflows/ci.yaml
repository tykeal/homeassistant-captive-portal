---
# SPDX-FileCopyrightText: 2025 Andrew Grimberg <tykeal@bardicgrove.org>
# SPDX-License-Identifier: Apache-2.0

name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches: [main, "0[0-9][0-9]-*"]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: addon

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          enable-cache: true
          cache-dependency-glob: "addon/uv.lock"

      - name: Verify uv.lock is up to date (T038)
        run: |
          if ! uv lock --check; then
            echo "::error::uv.lock is out of sync with pyproject.toml"
            echo "::error::Run 'uv lock' to update the lockfile"
            exit 1
          fi

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ./addon/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: addon

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1

      - name: Check for dependency vulnerabilities
        run: |
          # Export dependencies to requirements.txt format
          uv export --no-dev > requirements.txt

          # Install safety checker
          uv tool install safety

          # Run safety check
          uv tool run safety check -r requirements.txt --json || true

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: addon

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run mypy
        run: |
          uv run mypy src
